// <auto-generated />
using System;
using FakeoverFlow.Backend.Http.Api;
using FakeoverFlow.Backend.Http.Api.Models.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;

#nullable disable

namespace FakeoverFlow.Backend.Http.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250921140316_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresEnum(modelBuilder, "user_roles", new[] { "admin", "moderator", "user" });
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FakeoverFlow.Backend.Http.Api.Models.UserAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDisabled")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Password")
                        .HasColumnType("bytea");

                    b.Property<string>("ProfileImageUrl")
                        .HasColumnType("text");

                    b.Property<UserRoles>("Role")
                        .HasColumnType("user_roles");

                    b.Property<byte[]>("Salt")
                        .HasColumnType("bytea");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<NpgsqlTsVector>("VectorText")
                        .IsRequired()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("tsvector")
                        .HasAnnotation("Npgsql:TsVectorConfig", "english")
                        .HasAnnotation("Npgsql:TsVectorProperties", new[] { "FirstName", "LastName", "Email", "Username" });

                    b.Property<DateTimeOffset?>("VerifiedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("CreatedOn")
                        .HasDatabaseName("IX_UserAccount_CreatedOn");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_UserAccount_IsDeleted_ActiveOnly")
                        .HasFilter("\"IsDeleted\" = false");

                    b.HasIndex("UpdatedOn")
                        .HasDatabaseName("IX_UserAccount_UpdatedOn");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex("VectorText");

                    NpgsqlIndexBuilderExtensions.HasMethod(b.HasIndex("VectorText"), "GIN");

                    b.ToTable("UserAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
